@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@model AppMVC.Models.Product.ProductModel
@inject AppDBContext _context;
@inject UserManager<AppUser> _userManager;

@{
    ViewData["Title"] = "Edit";
    var categories = await _context.Categories.ToListAsync();
    var summernoteSettingForDescription = new SummernoteSetting("Description");
    var summernoteSettingForContent = new SummernoteSetting("Content",false);

}

<h1>Edit</h1>

<h4>Post</h4>
<hr />
<div class="row">
    <div class="col-md-8">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input asp-for="AuthorId" type="hidden" value="@Model.AuthorId" />
            <input asp-for="ProductCategoryProducts" type="hidden" value="@Model.ProductCategoryProducts" />
            <input name="id" value="@Model.ProductId" type="hidden" />
            <input asp-for="ProductId" value="@Model.ProductId" type="hidden" />
            <div class="form-group">
                <label class="control-label">Categories</label>
                <select multiple class="w-100" name="categoriesID" id="select-categories">
                    @if (categories != null)
                    {
                        foreach (var category in categories)
                        {
                            if (Model.ProductCategoryProducts != null && Model.ProductCategoryProducts.Any(pc => pc.CategoryID == category.Id))
                            {
                                <option selected value="@category.Id">@category.Title</option>
                            }
                            else
                            {
                                <option value="@category.Id">@category.Title</option>
                            }
                        }
                    }
                    
                </select>
            </div>
            <div class="form-group">
                <label asp-for="Title" class="control-label">Title</label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea id="Description" asp-for="Description" class="form-control" rows="2"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Slug" class="control-label"></label>
                <input asp-for="Slug" class="form-control" />
                <span asp-validation-for="Slug" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Content" class="control-label"></label>
                <textarea id="Content" asp-for="Content" class="form-control" rows="5"></textarea>
                <span asp-validation-for="Content" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Published" /> @Html.DisplayNameFor(model => model.Published)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Edit" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {

    <script src="~/lib/multiple-select/multiple-select.min.js"></script>
    <link rel="stylesheet" href="~/lib/multiple-select/multiple-select.min.css" />

    <script>
        $("#select-categories").multipleSelect({
            selectAll: false,
            keepOpen: false,
            isOpen: false,
        });
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <partial name="_Summernote" model="@summernoteSettingForDescription" />
    <partial name="_Summernote" model="@summernoteSettingForContent" />
}
